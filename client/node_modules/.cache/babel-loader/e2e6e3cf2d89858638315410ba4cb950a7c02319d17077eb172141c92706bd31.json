{"ast":null,"code":"import { initState } from '../initState';\nexport const addOrder = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  console.log(\"payDATA====>\", payload);\n  switch (type) {\n    case 'ORDERS':\n      return {\n        name: payload.name,\n        addres: payload.addres,\n        status: payload.status,\n        comment: payload.comment\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initState","addOrder","state","arguments","length","undefined","action","type","payload","console","log","name","addres","status","comment"],"sources":["/home/maksim/Рабочий стол/Tests/Advance_engineering/Advance_engineering/client/src/store/redux/addOrders.js"],"sourcesContent":["import { initState } from '../initState';\n\nexport const addOrder = (state = initState, action) =>{\nconst { type, payload } = action;\nconsole.log(\"payDATA====>\", payload);\nswitch (type) {\n  case 'ORDERS':\n    return { \n      name: payload.name,\n      addres: payload.addres,\n      status: payload.status,\n      comment: payload.comment, \n    };\n    default:\n      return state;\n  }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,SAAS;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,MAAM;IAAEE,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChCG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,OAAO,CAAC;EACpC,QAAQD,IAAI;IACV,KAAK,QAAQ;MACX,OAAO;QACLI,IAAI,EAAEH,OAAO,CAACG,IAAI;QAClBC,MAAM,EAAEJ,OAAO,CAACI,MAAM;QACtBC,MAAM,EAAEL,OAAO,CAACK,MAAM;QACtBC,OAAO,EAAEN,OAAO,CAACM;MACnB,CAAC;IACD;MACE,OAAOZ,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}