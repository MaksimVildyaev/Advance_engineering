{"ast":null,"code":"import { initState } from '../initState';\nexport const addNewOrder = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  // console.log(\"payDATA====>\", payload);\n  switch (type) {\n    case 'NEW_ORDER':\n      return payload;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initState","addNewOrder","state","arguments","length","undefined","action","type","payload"],"sources":["/home/maksim/Рабочий стол/Tests/Advance_engineering/Advance_engineering/client/src/store/redux/addNewOrder.js"],"sourcesContent":["import { initState } from '../initState';\n\nexport const addNewOrder = (state = initState, action) =>{\nconst { type, payload } = action;\n// console.log(\"payDATA====>\", payload);\nswitch (type) {\n  case 'NEW_ORDER':\n    return payload;\n    default:\n      return state;\n  }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,SAAS;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrD,MAAM;IAAEE,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC;EACA,QAAQC,IAAI;IACV,KAAK,WAAW;MACd,OAAOC,OAAO;IACd;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}